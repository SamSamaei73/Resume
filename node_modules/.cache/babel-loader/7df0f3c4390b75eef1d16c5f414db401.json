{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nexport const useDarkMode = () => {\n  _s();\n\n  const [theme, setTheme] = useState('light');\n  const [componentMounted, setComponentMounted] = useState(false);\n\n  const setMode = mode => {\n    window.localStorage.setItem('theme', mode);\n    setTheme(mode);\n  };\n\n  const toggleTheme = () => {\n    if (theme === 'light') {\n      setMode('dark');\n    } else {\n      setMode('light');\n    }\n  };\n\n  useEffect(() => {\n    const localTheme = window.localStorage.getItem('theme');\n    window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches && !localTheme ? setMode('dark') : localTheme ? setTheme(localTheme) : setMode('light');\n    setComponentMounted(true);\n  }, []);\n  return [theme, toggleTheme, componentMounted];\n};\n\n_s(useDarkMode, \"5Y28hpxLmrdWNPGd/5oHnPNY6R4=\");","map":{"version":3,"sources":["/Users/samsamaei/Documents/Projects/resume/src/components/Nightday/useDarkMode.js"],"names":["useEffect","useState","useDarkMode","theme","setTheme","componentMounted","setComponentMounted","setMode","mode","window","localStorage","setItem","toggleTheme","localTheme","getItem","matchMedia","matches"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAC/B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,OAAD,CAAlC;AACA,QAAM,CAACI,gBAAD,EAAmBC,mBAAnB,IAA0CL,QAAQ,CAAC,KAAD,CAAxD;;AAEA,QAAMM,OAAO,GAAIC,IAAD,IAAU;AACxBC,IAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,EAAqCH,IAArC;AACAJ,IAAAA,QAAQ,CAACI,IAAD,CAAR;AACD,GAHD;;AAKA,QAAMI,WAAW,GAAG,MAAM;AACxB,QAAIT,KAAK,KAAK,OAAd,EAAuB;AACrBI,MAAAA,OAAO,CAAC,MAAD,CAAP;AACD,KAFD,MAEO;AACLA,MAAAA,OAAO,CAAC,OAAD,CAAP;AACD;AACF,GAND;;AAQAP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,UAAU,GAAGJ,MAAM,CAACC,YAAP,CAAoBI,OAApB,CAA4B,OAA5B,CAAnB;AAEAL,IAAAA,MAAM,CAACM,UAAP,IACAN,MAAM,CAACM,UAAP,CAAkB,8BAAlB,EAAkDC,OADlD,IAEA,CAACH,UAFD,GAGIN,OAAO,CAAC,MAAD,CAHX,GAIIM,UAAU,GACVT,QAAQ,CAACS,UAAD,CADE,GAEVN,OAAO,CAAC,OAAD,CANX;AAQAD,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD,GAZQ,EAYN,EAZM,CAAT;AAcA,SAAO,CAACH,KAAD,EAAQS,WAAR,EAAqBP,gBAArB,CAAP;AACD,CAhCM;;GAAMH,W","sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nexport const useDarkMode = () => {\r\n  const [theme, setTheme] = useState('light');\r\n  const [componentMounted, setComponentMounted] = useState(false);\r\n\r\n  const setMode = (mode) => {\r\n    window.localStorage.setItem('theme', mode);\r\n    setTheme(mode);\r\n  };\r\n\r\n  const toggleTheme = () => {\r\n    if (theme === 'light') {\r\n      setMode('dark');\r\n    } else {\r\n      setMode('light');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const localTheme = window.localStorage.getItem('theme');\r\n\r\n    window.matchMedia &&\r\n    window.matchMedia('(prefers-color-scheme: dark)').matches &&\r\n    !localTheme\r\n      ? setMode('dark')\r\n      : localTheme\r\n      ? setTheme(localTheme)\r\n      : setMode('light');\r\n\r\n    setComponentMounted(true);\r\n  }, []);\r\n\r\n  return [theme, toggleTheme, componentMounted];\r\n};\r\n"]},"metadata":{},"sourceType":"module"}