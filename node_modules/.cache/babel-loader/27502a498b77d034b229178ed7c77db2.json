{"ast":null,"code":"var _jsxFileName = \"/Users/samsamaei/Documents/Projects/resume/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Main from './components/Main';\nimport Skills from './components/Skills';\nimport { GlobalStyles } from './components/Nightday/Global';\nimport { lightTheme, darkTheme } from './components/Nightday/Theme';\nimport { ThemeProvider } from 'styled-components';\nimport Toggle from './components/Nightday/Toggle';\nimport { useDarkMode } from './components/Nightday/useDarkMode';\nimport Certificate from './components/Certificate';\nimport Records from './components/Records';\nimport Footer from './components/Footer';\nimport Project from './components/Project';\nimport { useTranslation } from 'react-i18next';\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { css } from \"@emotion/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const {\n    t,\n    i18n\n  } = useTranslation();\n\n  const changeLanguageHandler = e => {\n    const languageValue = e.target.value;\n    i18n.changeLanguage(languageValue);\n  };\n\n  const [theme, toggleTheme, componentMounted] = useDarkMode();\n  const themeMode = theme === 'light' ? lightTheme : darkTheme;\n\n  if (!componentMounted) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n\n  useEffect(() => {\n    setLoading(true);\n    setTimeout();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"daynight\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexside\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"custom-select\",\n          onChange: changeLanguageHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"fa\",\n            children: \"\\u0641\\u0627\\u0631\\u0633\\u06CC \\uD83C\\uDDEE\\uD83C\\uDDF7 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"en\",\n            children: \" \\uD83C\\uDDEC\\uD83C\\uDDE7 English \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btnNight\",\n        children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n          theme: themeMode,\n          children: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Toggle, {\n              theme: theme,\n              toggleTheme: toggleTheme\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Skills, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Certificate, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Records, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Project, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"HGK97JoGLh0RUSPppyp4LLMi8HE=\", false, function () {\n  return [useTranslation, useDarkMode];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/samsamaei/Documents/Projects/resume/src/App.js"],"names":["useState","useEffect","Navbar","Main","Skills","GlobalStyles","lightTheme","darkTheme","ThemeProvider","Toggle","useDarkMode","Certificate","Records","Footer","Project","useTranslation","ClipLoader","css","App","loading","setLoading","t","i18n","changeLanguageHandler","e","languageValue","target","value","changeLanguage","theme","toggleTheme","componentMounted","themeMode","setTimeout"],"mappings":"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","sourcesContent":["import { useState , useEffect } from \"react\";\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Main from './components/Main';\nimport Skills from './components/Skills';\nimport { GlobalStyles } from './components/Nightday/Global';\nimport { lightTheme, darkTheme } from './components/Nightday/Theme';\nimport { ThemeProvider } from 'styled-components';\nimport Toggle from './components/Nightday/Toggle';\nimport { useDarkMode } from './components/Nightday/useDarkMode';\nimport Certificate from './components/Certificate';\nimport Records from './components/Records';\nimport Footer from './components/Footer';\nimport Project from './components/Project';\nimport { useTranslation } from 'react-i18next';\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { css } from \"@emotion/react\";\n\n\n\nfunction App() {\n  const [loading,setLoading]=useState(false)\n  const { t, i18n } = useTranslation();\n  const changeLanguageHandler = (e) => {\n    const languageValue = e.target.value;\n    i18n.changeLanguage(languageValue);\n  };\n  const [theme, toggleTheme, componentMounted] = useDarkMode();\n  const themeMode = theme === 'light' ? lightTheme : darkTheme;\n\n  if (!componentMounted) {\n    return <div />;\n  }\n  useEffect(()=>{\n    setLoading(true)\n    setTimeout()\n  })\n\n  return (\n    <div id=\"App\">\n\n      <div className=\"daynight\">\n        <div className=\"flexside\">\n      <select\n        className=\"custom-select\"\n        onChange={changeLanguageHandler}\n      >\n        <option value=\"fa\">فارسی 🇮🇷 </option>\n        <option value=\"en\"> 🇬🇧 English </option>\n      </select>\n\n        </div>\n        <div className=\"btnNight\">\n          <ThemeProvider theme={themeMode}>\n            <>\n              <GlobalStyles />\n              <Toggle theme={theme} toggleTheme={toggleTheme} />\n              {/* <h1 style={{ fontSize: '15px' }}>\n                {t('theme')} {theme === 'light' ? t('day') : t('night')}\n              </h1> */}\n            </>\n          </ThemeProvider>\n        </div>\n      </div>\n      <div className=\"container\">\n        <Navbar />\n        <Main />\n        <Skills />\n        <Certificate />\n        <Records />\n        <Project />\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}