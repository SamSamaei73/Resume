{"ast":null,"code":"import _slicedToArray from\"/Users/samsamaei/Documents/Projects/resume/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from'react';export var useDarkMode=function useDarkMode(){var _useState=useState('light'),_useState2=_slicedToArray(_useState,2),theme=_useState2[0],setTheme=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),componentMounted=_useState4[0],setComponentMounted=_useState4[1];var setMode=function setMode(mode){window.localStorage.setItem('theme',mode);setTheme(mode);};var toggleTheme=function toggleTheme(){if(theme==='light'){setMode('dark');}else{setMode('light');}};useEffect(function(){var localTheme=window.localStorage.getItem('theme');window.matchMedia&&window.matchMedia('(prefers-color-scheme: dark)').matches&&!localTheme?setMode('dark'):localTheme?setTheme(localTheme):setMode('light');setComponentMounted(true);},[]);return[theme,toggleTheme,componentMounted];};","map":{"version":3,"sources":["/Users/samsamaei/Documents/Projects/resume/src/components/Nightday/useDarkMode.js"],"names":["useEffect","useState","useDarkMode","theme","setTheme","componentMounted","setComponentMounted","setMode","mode","window","localStorage","setItem","toggleTheme","localTheme","getItem","matchMedia","matches"],"mappings":"gIAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CAEA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CAC/B,cAA0BD,QAAQ,CAAC,OAAD,CAAlC,wCAAOE,KAAP,eAAcC,QAAd,eACA,eAAgDH,QAAQ,CAAC,KAAD,CAAxD,yCAAOI,gBAAP,eAAyBC,mBAAzB,eAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,IAAD,CAAU,CACxBC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAqCH,IAArC,EACAJ,QAAQ,CAACI,IAAD,CAAR,CACD,CAHD,CAKA,GAAMI,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,GAAIT,KAAK,GAAK,OAAd,CAAuB,CACrBI,OAAO,CAAC,MAAD,CAAP,CACD,CAFD,IAEO,CACLA,OAAO,CAAC,OAAD,CAAP,CACD,CACF,CAND,CAQAP,SAAS,CAAC,UAAM,CACd,GAAMa,CAAAA,UAAU,CAAGJ,MAAM,CAACC,YAAP,CAAoBI,OAApB,CAA4B,OAA5B,CAAnB,CAEAL,MAAM,CAACM,UAAP,EACAN,MAAM,CAACM,UAAP,CAAkB,8BAAlB,EAAkDC,OADlD,EAEA,CAACH,UAFD,CAGIN,OAAO,CAAC,MAAD,CAHX,CAIIM,UAAU,CACVT,QAAQ,CAACS,UAAD,CADE,CAEVN,OAAO,CAAC,OAAD,CANX,CAQAD,mBAAmB,CAAC,IAAD,CAAnB,CACD,CAZQ,CAYN,EAZM,CAAT,CAcA,MAAO,CAACH,KAAD,CAAQS,WAAR,CAAqBP,gBAArB,CAAP,CACD,CAhCM","sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nexport const useDarkMode = () => {\r\n  const [theme, setTheme] = useState('light');\r\n  const [componentMounted, setComponentMounted] = useState(false);\r\n\r\n  const setMode = (mode) => {\r\n    window.localStorage.setItem('theme', mode);\r\n    setTheme(mode);\r\n  };\r\n\r\n  const toggleTheme = () => {\r\n    if (theme === 'light') {\r\n      setMode('dark');\r\n    } else {\r\n      setMode('light');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const localTheme = window.localStorage.getItem('theme');\r\n\r\n    window.matchMedia &&\r\n    window.matchMedia('(prefers-color-scheme: dark)').matches &&\r\n    !localTheme\r\n      ? setMode('dark')\r\n      : localTheme\r\n      ? setTheme(localTheme)\r\n      : setMode('light');\r\n\r\n    setComponentMounted(true);\r\n  }, []);\r\n\r\n  return [theme, toggleTheme, componentMounted];\r\n};\r\n"]},"metadata":{},"sourceType":"module"}